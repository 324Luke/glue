import randomstring from 'randomstring'
import { ConfigObject } from './config.controller'
import { Document } from '../entities/document.entity'
import { Repository } from 'typeorm'

export class DocumentHandler {
  options: ConfigObject

  constructor (options: ConfigObject) {
    this.options = options
  }

  /*
   * Helper method to generate keys using the PhoneticKeyGenerator class
   */
  private createKey (): string {
    return randomstring.generate(this.options.keyLength)
  }

  /*
   * Calls createKey() until it generates a unique key.
   */
  chooseKey (): string {
    return this.createKey()
  }

  /*
   * Creates a connection to the database, then creates a new entry in the database consisting of:
   *  - Document key, generated by chooseKey() and createKey() functions
   *  - Document content, provided by arguments
   */
  async newDocument (content: string, repository: Repository<Document>): Promise<object> {
    const id = this.chooseKey()

    repository.create({
      id,
      content
    })

    return { id, content }
  }
}
